"""v0.4

Revision ID: 0.4
Revises: 0.3.1
Create Date: 2022-12-15 07:48:02.699842

"""
import enum

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "0.4"
down_revision = "0.3.1"
branch_labels = None
depends_on = None


class EventLevelEnum(enum.IntEnum):
    DEBUG = 10
    INFO = 20
    WARNING = 30
    ERROR = 40
    CRITICAL = 50


def upgrade():
    event_level = postgresql.ENUM(EventLevelEnum, name="eventlevelenum")
    event_level.create(op.get_bind())
    op.add_column("events", sa.Column("level", event_level, nullable=False))

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_events_level_id_event_levels", "events", type_="foreignkey")
    op.drop_column("events", "level_id")
    op.drop_table("event_levels")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "event_levels",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=80), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(length=250), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="pk_event_levels"),
        sa.UniqueConstraint("name", name="uq_event_levels_name"),
    )
    op.add_column(
        "events",
        sa.Column("level_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "fk_events_level_id_event_levels",
        "events",
        "event_levels",
        ["level_id"],
        ["id"],
    )
    op.drop_column("events", "level")
    # ### end Alembic commands ###

    event_level = postgresql.ENUM(EventLevelEnum, name="eventlevelenum")
    event_level.drop(op.get_bind())
