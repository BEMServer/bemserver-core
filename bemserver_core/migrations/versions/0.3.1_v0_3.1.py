"""v0.3.1

Revision ID: 0.3.1
Revises: 0.3
Create Date: 2022-12-09 10:01:37.323208

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0.3.1"
down_revision = "0.3"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "events_by_buildings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["building_id"],
            ["buildings.id"],
            name=op.f("fk_events_by_buildings_building_id_buildings"),
        ),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
            name=op.f("fk_events_by_buildings_event_id_events"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events_by_buildings")),
        sa.UniqueConstraint(
            "building_id", "event_id", name=op.f("uq_events_by_buildings_building_id")
        ),
    )
    op.create_table(
        "events_by_sites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name=op.f("fk_events_by_sites_event_id_events")
        ),
        sa.ForeignKeyConstraint(
            ["site_id"], ["sites.id"], name=op.f("fk_events_by_sites_site_id_sites")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events_by_sites")),
        sa.UniqueConstraint(
            "site_id", "event_id", name=op.f("uq_events_by_sites_site_id")
        ),
    )
    op.create_table(
        "events_by_zones",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("zone_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name=op.f("fk_events_by_zones_event_id_events")
        ),
        sa.ForeignKeyConstraint(
            ["zone_id"], ["zones.id"], name=op.f("fk_events_by_zones_zone_id_zones")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events_by_zones")),
        sa.UniqueConstraint(
            "zone_id", "event_id", name=op.f("uq_events_by_zones_zone_id")
        ),
    )
    op.create_table(
        "events_by_storeys",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("storey_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
            name=op.f("fk_events_by_storeys_event_id_events"),
        ),
        sa.ForeignKeyConstraint(
            ["storey_id"],
            ["storeys.id"],
            name=op.f("fk_events_by_storeys_storey_id_storeys"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events_by_storeys")),
        sa.UniqueConstraint(
            "storey_id", "event_id", name=op.f("uq_events_by_storeys_storey_id")
        ),
    )
    op.create_table(
        "events_by_spaces",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("space_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.id"],
            name=op.f("fk_events_by_spaces_event_id_events"),
        ),
        sa.ForeignKeyConstraint(
            ["space_id"],
            ["spaces.id"],
            name=op.f("fk_events_by_spaces_space_id_spaces"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_events_by_spaces")),
        sa.UniqueConstraint(
            "space_id", "event_id", name=op.f("uq_events_by_spaces_space_id")
        ),
    )
    # ### end Alembic commands ###

    # Rename table timeseries_by_zones -> ts_by_zones
    op.rename_table("timeseries_by_zones", "ts_by_zones")
    op.execute("ALTER SEQUENCE timeseries_by_zones_id_seq RENAME TO ts_by_zones_id_seq")
    op.execute("ALTER INDEX pk_timeseries_by_zones RENAME TO pk_ts_by_zones")
    op.execute(
        "ALTER TABLE ts_by_zones "
        "RENAME CONSTRAINT fk_timeseries_by_zones_zone_id_zones "
        "TO fk_ts_by_zones_zone_id_zones"
    )
    op.execute(
        "ALTER TABLE ts_by_zones "
        "RENAME CONSTRAINT fk_timeseries_by_zones_timeseries_id_timeseries "
        "TO fk_ts_by_zones_timeseries_id_timeseries"
    )
    op.execute(
        "ALTER TABLE ts_by_zones "
        "RENAME CONSTRAINT uq_timeseries_by_zones_zone_id "
        "TO uq_ts_by_zones_zone_id"
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("events_by_spaces")
    op.drop_table("events_by_storeys")
    op.drop_table("events_by_zones")
    op.drop_table("events_by_sites")
    op.drop_table("events_by_buildings")
    # ### end Alembic commands ###

    op.rename_table("ts_by_zones", "timeseries_by_zones")
    op.execute("ALTER SEQUENCE ts_by_zones_id_seq RENAME TO timeseries_by_zones_id_seq")
    op.execute("ALTER INDEX pk_ts_by_zones RENAME TO pk_timeseries_by_zones")
    op.execute(
        "ALTER TABLE timeseries_by_zones "
        "RENAME CONSTRAINT fk_ts_by_zones_zone_id_zones "
        "TO fk_timeseries_by_zones_zone_id_zones"
    )
    op.execute(
        "ALTER TABLE timeseries_by_zones "
        "RENAME CONSTRAINT fk_ts_by_zones_timeseries_id_timeseries "
        "TO fk_timeseries_by_zones_timeseries_id_timeseries"
    )
    op.execute(
        "ALTER TABLE timeseries_by_zones "
        "RENAME CONSTRAINT uq_ts_by_zones_zone_id "
        "TO uq_timeseries_by_zones_zone_id"
    )
